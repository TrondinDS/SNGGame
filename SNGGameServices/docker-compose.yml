services:

  userservices:
    build:
      context: ./UserService
      dockerfile: Dockerfile
    image: myuserimage:latest
    volumes:
      - .:/app
    ports:
      - "5285:80"
    depends_on:
      - user-db

  user-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: userdb
    ports:
      - "5433:5432"
    volumes:
      - user_db_data:/var/lib/postgresql/data
      - ./userdbinit.sql:/docker-entrypoint-initdb.d/init.sql 
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d userdb"]
      interval: 30s 
      timeout: 10s  
      retries: 3    
      start_period: 30s


  banned-service:
    build:
      context: ./BannedService
      dockerfile: Dockerfile
    image: mybannedimage:latest
    volumes:
      - .:/app
    ports:
      - "5286:80"
    depends_on:
      - banned-db

  banned-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: banneddb
    ports:
      - "5434:5432"
    volumes:
      - banned_db_data:/var/lib/postgresql/data
      - ./banneddbinit.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d banneddb"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  
  studio-game-service:
    build:
      context: ./StudioGameService
      dockerfile: Dockerfile
    image: mystudiogameimage:latest
    volumes:
      - .:/app
    ports:
      - "5287:80"
    depends_on:
      - studio-game-db

  studio-game-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: studiogamedb
    ports:
      - "5435:5432"
    volumes:
      - studio_game_db_data:/var/lib/postgresql/data
      - ./studiogamedbinit.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d studiogamedb"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  user-activity-service:
    build:
      context: ./UserActivity
      dockerfile: Dockerfile
    image: myuseractivityimage:latest
    volumes:
      - .:/app
    ports:
      - "5288:80"
    depends_on:
      - user-activity-db

  user-activity-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: useractivitydb
    ports:
      - "5436:5432"
    volumes:
      - user_activity_db_data:/var/lib/postgresql/data
      - ./useractivitydbinit.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d useractivitydb"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: 123
    ports:
      - "5050:80"
    depends_on:
      - user-db


volumes:
  user_db_data:
  banned_db_data:
  studio_game_db_data:
  user_activity_db_data:

